{"version":3,"sources":["actions/types.js","reducers/logReducer.js","reducers/techReducer.js","reducers/rootReducer.js","store.js","actions/logActions.js","components/layout/searchBar.js","assets/loading.gif","components/layout/preLoader.js","components/logs/logItem.js","components/logs/logs.js","components/layout/addBtn.js","actions/techActions.js","components/techs/techSelectOption.js","components/logs/addLogModal.js","components/logs/editLogModal.js","components/techs/addTechModal.js","components/techs/techItem.js","components/techs/techListModal.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","intialState","logs","current","loading","error","logReducer","state","action","type","payload","filter","log","id","map","console","initialState","techs","techReducer","tech","combineReducers","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setLoading","connect","searchLogs","text","dispatch","a","fetch","res","json","data","useRef","className","placeholder","ref","onChange","e","value","htmlFor","Preloader","src","LoadingIcon","alt","LogItem","deleteLog","setCurrent","href","attention","onClick","message","format","date","M","toast","html","protoType","PropTypes","object","isRequired","func","method","Logs","reducerLog","getLogs","useEffect","length","propType","AddBtn","getTechs","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","style","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e081978.chunk.js","sourcesContent":["export const GET_LOGS = \"GET_LOGS\";\r\nexport const ADD_LOG = \"ADD_LOG\";\r\nexport const DELETE_LOG = \"DELETE_LOG\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_LOG = \"UPDATE_LOG\";\r\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const LOGS_ERROR = \"LOGS_ERROR\";\r\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\r\nexport const GET_TECHS = \"GET_TECHS\";\r\nexport const ADD_TECH = \"ADD_TECH\";\r\nexport const DELETE_TECH = \"DELETE_TECH\";\r\nexport const TECHS_ERROR = \"TECHS_ERROR\";\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./../actions/types\";\r\n\r\nconst intialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n// eslint-disable-next-line\r\nconst logReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_LOG: {\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => {\r\n          return log.id !== action.payload;\r\n        }),\r\n        loading: false,\r\n      };\r\n    }\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n        loading: false,\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logReducer;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst techReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default techReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport logReducer from \"./logReducer\";\r\nimport techReducer from \"./techReducer\";\r\n\r\nexport default combineReducers({\r\n  logs: logReducer,\r\n  techs: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst intialState = {};\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  intialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SEARCH_LOGS,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./types\";\r\n\r\n// export const getLogs = () => {\r\n//   return async (dispatch) => {\r\n//     setLoading();\r\n//     const res = await fetch(\"/logs\");\r\n//     const data = await res.json();\r\n//     dispatch({\r\n//       type: GET_LOGS,\r\n//       payload: data,\r\n//     });\r\n//   };\r\n// };\r\n//get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(\"/logs\");\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//Add new Log\r\nexport const addLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(\"/logs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//delete log from server\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/logs/${id}`, {\r\n      method: \"delete\",\r\n    });\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//set current log\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n//clear current log\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT,\r\n  };\r\n};\r\n//update log from server\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//search logs from server\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { searchLogs } from \"./../../actions/logActions\";\r\nimport \"./searchBar.css\";\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef(\"\"); //default value\r\n  const onChange = (e) => {\r\n    searchLogs(text.current.value);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar blue\">\r\n      <div className=\"nav-wrapper\">\r\n        <form>\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"search\"\r\n              type=\"search\"\r\n              placeholder=\"Search Logs..\"\r\n              ref={text}\r\n              onChange={onChange}\r\n            />\r\n            <label className=\"label-icon\" htmlFor=\"search\">\r\n              <i className=\"material-icons\">search</i>\r\n            </label>\r\n            <i className=\"material-icons\">close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","export default __webpack_public_path__ + \"static/media/loading.b78c4790.gif\";","import React from \"react\";\r\nimport LoadingIcon from \"./../../assets/loading.gif\";\r\nimport \"./preLoader.css\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <img\r\n      src={LoadingIcon}\r\n      className=\"loading horizontal-middle-align\"\r\n      alt=\"Loading..\"\r\n    />\r\n  );\r\n};\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { deleteLog, setCurrent } from \"./../../actions/logActions\";\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: \"Log deleted\" });\r\n  };\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        <a\r\n          href=\"#edit-log-modal\"\r\n          className={`modal-trigger ${\r\n            log.attention ? `red-text` : `blue-text`\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className=\"grey-text\">\r\n          <span className=\"black-text\">ID #{log.id}</span> last updated by\r\n          <span className=\"black-text\"> {log.tech}</span> on{\" \"}\r\n          <Moment\r\n            format=\"MMMM Do YYYY,\r\n          h:mm:ss a\"\r\n          >\r\n            {log.date}\r\n          </Moment>\r\n        </span>\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nLogItem.protoType = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../layout/preLoader\";\r\nimport LogItem from \"./logItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getLogs } from \"./../../actions/logActions\";\r\n\r\nconst Logs = ({ reducerLog: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <ul className=\"collection with-header\">\r\n      <li className=\"collection-header\">\r\n        <h4 className=\"center\">System Logs</h4>\r\n      </li>\r\n      {logs.length === 0 ? (\r\n        <p className=\"center\">No Logs to show...</p>\r\n      ) : (\r\n        logs.map((log) => <LogItem key={log.id} log={log} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nLogs.propType = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  reducerLog: state.logs, //coming from root reducer\r\n});\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from \"react\";\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className=\"fixed-action-btn\">\r\n      <a\r\n        href=\"#add-log-modal\"\r\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\r\n      >\r\n        <i className=\"large material-icons\">add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href=\"#tech-list-modal\"\r\n            className=\"btn-floating green modal-trigger\"\r\n          >\r\n            <i className=\"material-icons\">person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n            <i className=\"material-icons\">person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR,\r\n} from \"./types\";\r\n\r\n//get Techs from server\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(\"/techs\");\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//add Technician to server\r\nexport const addTech = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    const res = await fetch(\"/techs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//delete Techs from server\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n    await fetch(`/techs/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error,\r\n    });\r\n  }\r\n};\r\n//set Loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getTechs } from \"./../../actions/techActions\";\r\n\r\nconst TechSelectOption = ({ getTechs, techs: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    !loading &&\r\n    techs &&\r\n    techs.map((tech) => (\r\n      <option key={tech.id} value={`${tech.firstName} ${tech.lastName}`}>\r\n        {tech.firstName} {tech.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOption.propTypes = {\r\n  getTechs: PropTypes.func.isRequired,\r\n  techs: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProp = (state) => ({\r\n  techs: state.techs,\r\n});\r\n\r\nexport default connect(mapStateToProp, { getTechs })(TechSelectOption);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addLog } from \"./../../actions/logActions\";\r\nimport TechSelectOption from \"./../techs/techSelectOption\";\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n  const onSubmit = () => {\r\n    if (!message || !tech) {\r\n      M.toast({ html: \"Please enter a message and Tech\" });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n      addLog(newLog);\r\n      M.toast({ html: `Log added by ${tech}` });\r\n      //clearFields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tect\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOption />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attentions</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addLog })(AddLogModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { updateLog } from \"./../../actions/logActions\";\r\nimport TechSelectOption from \"../techs/techSelectOption\";\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n  const onSubmit = () => {\r\n    if (!message || !tech) {\r\n      M.toast({ html: \"Please enter a message and Tech\" });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n      //clear field\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(false);\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n      <div className=\"modal-content\">\r\n        <h4>Enter System Log</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            {/* <label htmlFor=\"message\" className=\"active\">\r\n              Log Message\r\n            </label> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <select\r\n              name=\"tect\"\r\n              value={tech}\r\n              className=\"browser-default\"\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOption />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"filled-in\"\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attentions</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\",\r\n};\r\nEditLogModal.propTypes = {\r\n  updateLog: PropTypes.func.isRequired,\r\n  current: PropTypes.object,\r\n};\r\nconst mapStateToProp = (state) => ({\r\n  current: state.logs.current,\r\n});\r\n\r\nexport default connect(mapStateToProp, { updateLog })(EditLogModal);\r\n","import React, { useState } from \"react\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTech } from \"./../../actions/techActions\";\r\n\r\nconst AddtechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (!firstName || !lastName) {\r\n      M.toast({ html: \"Please enter the first and last name\" });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName,\r\n      });\r\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n      //clearFields\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"add-tech-modal\" className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h4>New Technician</h4>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"firstName\" className=\"active\">\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"lastName\" className=\"active\">\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <a\r\n          href=\"#!\"\r\n          onClick={onSubmit}\r\n          className=\"modal-close waves-effect blue waves-light btn\"\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddtechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTech })(AddtechModal);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTech } from \"./../../actions/techActions\";\r\n\r\nconst TechItem = ({ tech: { firstName, lastName, id }, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: \"Technician Deleted\" });\r\n  };\r\n  return (\r\n    <li className=\"collection-item\">\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\r\n          <i className=\"material-icons grey-text\">delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport TechItem from \"./techItem\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getTechs } from \"./../../actions/techActions\";\r\n\r\nconst TechListModal = ({ techs: { techs, loading }, getTechs }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div id=\"tech-list-modal\" className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <h4>Technician List</h4>\r\n          <ul className=\"collection\">\r\n            {!loading &&\r\n              techs &&\r\n              techs.map((tech) => <TechItem key={tech.id} tech={tech} />)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nTechListModal.propTypes = {\r\n  getTechs: PropTypes.func.isRequired,\r\n  techs: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProp = (state) => ({\r\n  techs: state.techs,\r\n});\r\n\r\nexport default connect(mapStateToProp, { getTechs })(TechListModal);\r\n","import React, { Fragment, useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport \"./App.css\";\nimport SearchBar from \"./components/layout/searchBar\";\nimport Logs from \"./components/logs/logs\";\nimport AddBtn from \"./components/layout/addBtn\";\nimport AddLogModal from \"./components/logs/addLogModal\";\nimport EditLogModal from \"./components/logs/editLogModal\";\nimport AddtechModal from \"./components/techs/addTechModal\";\nimport TechListModal from \"./components/techs/techListModal\";\n\nconst App = () => {\n  useEffect(() => {\n    //initialize materialized js\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddtechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}